{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["appear","keyframes","ProjectContainer","ProjectsContainer","ProjectImage","fadeIn","SectionTitle","ImageLink","ProjectComponent","project","frontmatter","image","href","publicURL","src","alt","title","dangerouslySetInnerHTML","__html","html","IndexPage","data","canItBeDone","edges","map","page","key","node","id","other","query"],"mappings":"mgBAQA,IAAMA,EAASC,YAAH,KASNC,EAAgB,2PAWPF,EAXO,oDAehBG,EAAiB,8HAQjBC,EAAY,mGAKZC,EAASJ,YAAH,KASNK,EAAY,oDACHD,EADG,wDAMZE,EAAS,mFAITC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACvB,YAACP,EAAD,KACGO,EAAQC,YAAYC,OACnB,YAACJ,EAAD,CAAWK,KAAMH,EAAQC,YAAYC,MAAME,WACzC,YAACT,EAAD,CACEU,IAAKL,EAAQC,YAAYC,MAAME,UAC/BE,IAAKN,EAAQC,YAAYM,SAI/B,sBAAKP,EAAQC,YAAYM,OACzB,mBAAKC,wBAAyB,CAAEC,OAAQT,EAAQU,UAyBrCC,UArBG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKL,MAAM,SACX,YAACV,EAAD,qCACA,YAACH,EAAD,KACGkB,EAAKC,YAAYC,MAAMC,KAAI,SAAAC,GAAI,OAC9B,YAACjB,EAAD,CAAkBkB,IAAKD,EAAKE,KAAKC,GAAInB,QAASgB,EAAKE,WAIvD,YAACrB,EAAD,uBACA,YAACH,EAAD,KACGkB,EAAKQ,MAAMN,MAAMC,KAAI,SAAAC,GAAI,OACxB,YAACjB,EAAD,CAAkBkB,IAAKD,EAAKE,KAAKC,GAAInB,QAASgB,EAAKE,aAStD,IAAMG,EAAK","file":"component---src-pages-index-js-ca98d2ca0c113e6f792b.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport styled from '@emotion/styled'\nimport { keyframes } from '@emotion/core'\n\nconst appear = keyframes`\n  from {\n    transform: scale(0);\n  }\n  to {\n    transform: scale(1);\n  }\n`\n\nconst ProjectContainer = styled.section`\n  flex: 0 0 calc(100% - 30px);\n  @media only screen and (min-width: 768px) {\n    flex: 0 0 calc(50% - 30px);\n  }\n  margin: 15px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  background-color: #f3f2f1;\n  color: #0b0c0c;\n  animation: ${appear} 1s;\n  animation-fill-mode: both;\n  animation-delay: 1s;\n`\nconst ProjectsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  &::after {\n    content: '';\n    flex: auto;\n  }\n`\nconst ProjectImage = styled.img`\n  height: 300px;\n  object-fit: contain;\n`\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`\n\nconst SectionTitle = styled.h2`\n  animation: ${fadeIn} 0.5s;\n  animation-fill-mode: both;\n  animation-delay: 0.5s;\n`\n\nconst ImageLink = styled.a`\n  text-align: center;\n`\n\nconst ProjectComponent = ({ project }) => (\n  <ProjectContainer>\n    {project.frontmatter.image && (\n      <ImageLink href={project.frontmatter.image.publicURL}>\n        <ProjectImage\n          src={project.frontmatter.image.publicURL}\n          alt={project.frontmatter.title}\n        />\n      </ImageLink>\n    )}\n    <h3>{project.frontmatter.title}</h3>\n    <div dangerouslySetInnerHTML={{ __html: project.html }}></div>\n  </ProjectContainer>\n)\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <SectionTitle>Can it be done in React Web?</SectionTitle>\n      <ProjectsContainer>\n        {data.canItBeDone.edges.map(page => (\n          <ProjectComponent key={page.node.id} project={page.node} />\n        ))}\n      </ProjectsContainer>\n\n      <SectionTitle>Other Projects</SectionTitle>\n      <ProjectsContainer>\n        {data.other.edges.map(page => (\n          <ProjectComponent key={page.node.id} project={page.node} />\n        ))}\n      </ProjectsContainer>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  {\n    canItBeDone: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(react-web)/\" } }\n      sort: { order: ASC, fields: [frontmatter___order] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            image {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n\n    other: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(other)/\" } }\n      sort: { order: ASC, fields: [frontmatter___order] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            image {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}