{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["appear","keyframes","ProjectContainer","ProjectsContainer","ProjectImage","fadeIn","SectionTitle","ImageLink","BlogPostList","BlogPostItem","blogPost","to","fields","slug","frontmatter","title","date","ProjectComponent","project","image","href","publicURL","src","alt","dangerouslySetInnerHTML","__html","html","IndexPage","data","blogPosts","edges","map","key","node","id","canItBeDone","page","other","query"],"mappings":"+gBAQA,IAAMA,EAASC,YAAH,KASNC,EAAgB,0PAWPF,EAXO,sDAehBG,EAAiB,gJASjBC,EAAY,kGAKZC,EAASJ,YAAH,KASNK,EAAY,mDACHD,EADG,mCAKZE,EAAS,kFAITC,EAAY,0FAGHR,EAHG,4MAsBZS,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,sBACE,YAAC,OAAD,CAAMC,GAAID,EAASE,OAAOC,MAAOH,EAASI,YAAYC,OACtD,wBAAOL,EAASI,YAAYE,QAI1BC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACvB,YAAChB,EAAD,KACGgB,EAAQJ,YAAYK,OACnB,YAACZ,EAAD,CAAWa,KAAMF,EAAQJ,YAAYK,MAAME,WACzC,YAACjB,EAAD,CACEkB,IAAKJ,EAAQJ,YAAYK,MAAME,UAC/BE,IAAKL,EAAQJ,YAAYC,SAI/B,sBAAKG,EAAQJ,YAAYC,OACzB,mBAAKS,wBAAyB,CAAEC,OAAQP,EAAQQ,UAiCrCC,UA7BG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKb,MAAM,SACX,YAACT,EAAD,aACA,YAACE,EAAD,KACGoB,EAAKC,UAAUC,MAAMC,KAAI,SAAArB,GAAQ,OAChC,YAACD,EAAD,CAAcuB,IAAKtB,EAASuB,KAAKC,GAAIxB,SAAUA,EAASuB,UAE1D,YAAC,OAAD,CAAMtB,GAAG,SAAT,YAGF,YAACL,EAAD,qCACA,YAACH,EAAD,KACGyB,EAAKO,YAAYL,MAAMC,KAAI,SAAAK,GAAI,OAC9B,YAACnB,EAAD,CAAkBe,IAAKI,EAAKH,KAAKC,GAAIhB,QAASkB,EAAKH,WAIvD,YAAC3B,EAAD,uBACA,YAACH,EAAD,KACGyB,EAAKS,MAAMP,MAAMC,KAAI,SAAAK,GAAI,OACxB,YAACnB,EAAD,CAAkBe,IAAKI,EAAKH,KAAKC,GAAIhB,QAASkB,EAAKH,aAStD,IAAMK,EAAK","file":"component---src-pages-index-js-5f79f4ec9eead3d2b3b2.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport styled from '@emotion/styled'\nimport { keyframes } from '@emotion/core'\n\nconst appear = keyframes`\n  from {\n    transform: scale(0);\n  }\n  to {\n    transform: scale(1);\n  }\n`\n\nconst ProjectContainer = styled.section`\n  flex: 0 0 calc(100% - 30px);\n  @media only screen and (min-width: 768px) {\n    flex: 0 0 calc(50% - 30px);\n  }\n  margin: 15px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  background-color: #f3f2f1;\n  color: #0b0c0c;\n  animation: ${appear} 1s;\n  animation-fill-mode: both;\n  animation-delay: 0.5s;\n`\nconst ProjectsContainer = styled.div`\n  margin-bottom: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  &::after {\n    content: '';\n    flex: auto;\n  }\n`\nconst ProjectImage = styled.img`\n  height: 300px;\n  object-fit: contain;\n`\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`\n\nconst SectionTitle = styled.h2`\n  animation: ${fadeIn} 0.5s;\n  animation-fill-mode: both;\n`\n\nconst ImageLink = styled.a`\n  align-self: center;\n`\n\nconst BlogPostList = styled.ol`\n  background-color: #f3f2f1;\n  color: #0b0c0c;\n  animation: ${appear} 1s;\n  animation-fill-mode: both;\n  list-style: none;\n  margin: 15px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  & > li {\n    margin: 0;\n    display: flex;\n    a {\n      margin-right: 10px;\n      font-weight: bold;\n    }\n  }\n  & > a {\n    align-self: flex-end;\n  }\n`\nconst BlogPostItem = ({ blogPost }) => (\n  <li>\n    <Link to={blogPost.fields.slug}>{blogPost.frontmatter.title}</Link>\n    <span>{blogPost.frontmatter.date}</span>\n  </li>\n)\n\nconst ProjectComponent = ({ project }) => (\n  <ProjectContainer>\n    {project.frontmatter.image && (\n      <ImageLink href={project.frontmatter.image.publicURL}>\n        <ProjectImage\n          src={project.frontmatter.image.publicURL}\n          alt={project.frontmatter.title}\n        />\n      </ImageLink>\n    )}\n    <h3>{project.frontmatter.title}</h3>\n    <div dangerouslySetInnerHTML={{ __html: project.html }}></div>\n  </ProjectContainer>\n)\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <SectionTitle>Blog</SectionTitle>\n      <BlogPostList>\n        {data.blogPosts.edges.map(blogPost => (\n          <BlogPostItem key={blogPost.node.id} blogPost={blogPost.node} />\n        ))}\n        <Link to=\"/blog\">See all</Link>\n      </BlogPostList>\n\n      <SectionTitle>Can it be done in React Web?</SectionTitle>\n      <ProjectsContainer>\n        {data.canItBeDone.edges.map(page => (\n          <ProjectComponent key={page.node.id} project={page.node} />\n        ))}\n      </ProjectsContainer>\n\n      <SectionTitle>Other Projects</SectionTitle>\n      <ProjectsContainer>\n        {data.other.edges.map(page => (\n          <ProjectComponent key={page.node.id} project={page.node} />\n        ))}\n      </ProjectsContainer>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  {\n    canItBeDone: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(react-web)/\" } }\n      sort: { order: ASC, fields: [frontmatter___order] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            image {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n\n    other: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(other)/\" } }\n      sort: { order: ASC, fields: [frontmatter___order] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            image {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n    blogPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(blog)/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 3\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"D MMMM YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}